{"version":3,"sources":["state/action-types/index.ts","state/cell.ts","state/reducers/cellsReducer.ts","state/reducers/bundlesReducer.ts","state/reducers/threadsReducer.ts","state/reducers/index.ts","state/store.ts","bundler/plugin/fetchPlugin.ts","bundler/index.ts","bundler/plugin/unpkPlugin.ts","state/action-creators/index.ts","components/NavBar/index.tsx","assets/github-logo.svg","components/Footer/index.tsx","App.tsx","assets/showcase1.png","assets/showcase2.png","pages/home.tsx","hooks/use-actions.ts","components/ActionBar/index.tsx","components/CodeEditor/index.tsx","components/Iframe/index.tsx","components/Resizable/index.tsx","hooks/use-typed-selector.ts","components/CodeCell/index.tsx","hooks/use-cumulative-code.ts","components/TextEditor/index.tsx","components/CellListItem/index.tsx","components/AddCell/index.tsx","components/CellListCard/index.tsx","components/CellList/index.tsx","components/ThreadListItem/index.tsx","components/AddThreadCard/index.tsx","components/ThreadList/index.tsx","components/AddUpdThread/index.tsx","index.tsx"],"names":["ActionType","randomId","Math","random","toString","substring","initialState","data","loading","error","order","reducer","produce","state","arguments","length","undefined","action","type","DELETE_CELL","threadID","cellID","payload","filter","id","UPDATE_CELL","content","MOVE_CELL","direction","i","findIndex","targetI","INSERT_CELL","cell","unshift","splice","INITIALIZE_CELLS","BUNDLE_START","code","err","BUNDLE_COMPLETE","bundle","initialThreadsState","CREATE_THREAD","name","description","thread","UPDATE_THREAD","DELETE_THREAD","reducers","combineReducers","cells","cellsReducer","bundles","bundlesReducer","threads","threadsReducer","store","createStore","applyMiddleware","thunk","clientCache","localforage","createInstance","service","async","esbuild","wasmURL","worker","build","entryPoints","write","plugins","setup","onResolve","args","path","namespace","concat","URL","resolveDir","href","input","rawCode","onLoad","loader","contents","cachedResult","getItem","request","axios","get","escaped","replace","result","responseURL","pathname","setItem","define","global","jsxFactory","jsxFragment","outputFiles","text","Error","message","updateCell","deleteCell","moveCell","insertCell","createBundle","dispatch","res","createThread","deleteThread","updateThread","Navbar","isScrolled","setIsScrolled","useState","changeBG","window","scrollY","useEffect","addEventListener","removeEventListener","_jsx","className","children","_jsxs","Link","to","target","rel","Footer","src","github_logo","alt","App","Outlet","ScrollRestoration","Home","_Fragment","showcase1","showcase2","useActions","useDispatch","useMemo","bindActionCreators","actionCreators","ActionBar","_ref","Fragment","title","onClick","CodeEditor","initialValue","onChange","editorRef","useRef","onFormat","unformated","current","getModel","getValue","formated","prettier","format","parser","useTabs","semi","singleQuote","setValue","MonacoEditor","editorDidMount","onEditorDidMount","monacoEditor","onDidChangeModelContent","Highlighter","monaco","codeShift","highLightOnDidChangeModelContent","value","language","theme","options","wordWrap","minimap","enabled","showUnused","folding","lineNumbersMinChars","fontSize","scrollBeyondLastLine","automaticLayout","colorDecorators","scrollbar","alwaysConsumeMouseWheel","html","Iframe","bundlerErr","iframe","srcDoc","setTimeout","contentWindow","postMessage","ref","sandbox","Resizable","innerWidth","setInnerWidth","width","setWidth","resizableProps","timer","listener","clearTimeout","height","Infinity","resizeHandles","minConstraints","maxConstraints","onResizeStop","e","size","ResizableBox","useTypedSelector","useSelector","CodeCell","cumulativeCode","useCumulativeCode","orderedList","map","c","push","regex","join","TextEditor","editing","setEditing","contains","document","capture","MDEditor","innerHeight","Markdown","source","CellListItem","AddCell","nextCellID","forceVisible","CellListCard","CellList","location","useLocation","ThreadListItem","navigate","useNavigate","stopPropagation","onClickEdit","AddThreadCard","ThreadList","Object","values","AddUpdThread","currentName","currentDescription","setName","setDescription","onSubmit","preventDefault","htmlFor","autoComplete","maxLength","cols","rows","root","ReactDOM","createRoot","getElementById","router","createBrowserRouter","element","basename","render","React","StrictMode","Provider","RouterProvider"],"mappings":"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","file":"static/js/main.1d62563b.chunk.js","sourcesContent":["export enum ActionType {\r\n  UPDATE_CELL = 'update_cell',\r\n  DELETE_CELL = 'delete_cell',\r\n  MOVE_CELL = 'move_cell',\r\n  INSERT_CELL = 'insert_cell',\r\n  BUNDLE_START = 'bundle_start',\r\n  BUNDLE_COMPLETE = 'bundle_complete',\r\n  CREATE_THREAD = 'create_trhread',\r\n  DELETE_THREAD = 'delete_thread',\r\n  INITIALIZE_CELLS = 'initialize_cells',\r\n  UPDATE_THREAD = 'update_thread',\r\n}\r\n","export type CellTypes = 'code' | 'text';\r\nexport type Direction = 'up' | 'down';\r\n\r\nexport interface Cell {\r\n  id: string;\r\n  type: CellTypes;\r\n  content: string;\r\n}\r\n\r\nexport const randomId = () => {\r\n  return Math.random().toString(36).substring(0, 4);\r\n};\r\n","import { Action } from '../actions';\r\nimport { ActionType } from '../action-types';\r\nimport { Cell, randomId } from '../cell';\r\nimport produce from 'immer';\r\n\r\nexport interface CellState {\r\n  data: { [threadID: string]: { [cellID: string]: Cell } };\r\n  loading: boolean;\r\n  error: string | null;\r\n  order: { [threadID: string]: string[] };\r\n}\r\n\r\nexport const initialState: CellState = {\r\n  data: {},\r\n  loading: false,\r\n  error: null,\r\n  order: {},\r\n};\r\n\r\nconst reducer = produce((state: CellState = initialState, action: Action) => {\r\n  switch (action.type) {\r\n    case ActionType.DELETE_CELL:\r\n      {\r\n        const { threadID, cellID } = action.payload;\r\n        delete state.data[threadID][cellID];\r\n        state.order[threadID] = state.order[threadID].filter((id) => id !== cellID);\r\n      }\r\n      break;\r\n\r\n    case ActionType.UPDATE_CELL:\r\n      {\r\n        const { threadID, cellID, content } = action.payload;\r\n        state.data[threadID][cellID].content = content;\r\n      }\r\n      break;\r\n\r\n    case ActionType.MOVE_CELL:\r\n      {\r\n        const { threadID, cellID, direction } = action.payload;\r\n        const i = state.order[threadID].findIndex((id) => id === cellID);\r\n        const targetI = direction === 'up' ? i - 1 : i + 1;\r\n        if (targetI < 0 || targetI > state.order[threadID].length - 1) return;\r\n        [state.order[threadID][i], state.order[threadID][targetI]] = [\r\n          state.order[threadID][targetI],\r\n          state.order[threadID][i],\r\n        ];\r\n      }\r\n      break;\r\n\r\n    case ActionType.INSERT_CELL:\r\n      {\r\n        const { threadID, cellID, type } = action.payload;\r\n        const cell: Cell = {\r\n          content: '',\r\n          type,\r\n          id: randomId(),\r\n        };\r\n        state.data[threadID][cell.id] = cell;\r\n        const i = state.order[threadID].findIndex((id) => id === cellID);\r\n        if (i < 0) {\r\n          state.order[threadID].unshift(cell.id);\r\n        } else {\r\n          state.order[threadID].splice(i + 1, 0, cell.id);\r\n        }\r\n      }\r\n      break;\r\n\r\n    case ActionType.INITIALIZE_CELLS:\r\n      state.data[action.payload] = {};\r\n      state.order[action.payload] = [];\r\n\r\n      break;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}, initialState);\r\n\r\nexport default reducer;\r\n","import { Action } from '../actions';\r\nimport { ActionType } from '../action-types';\r\nimport produce from 'immer';\r\n\r\ninterface BundleState {\r\n  [id: string]:\r\n    | {\r\n        loading: boolean;\r\n        code: string;\r\n        err: string;\r\n      }\r\n    | undefined;\r\n}\r\n\r\nconst initialState: BundleState = {};\r\n\r\nconst reducer = produce((state: BundleState = initialState, action: Action) => {\r\n  switch (action.type) {\r\n    case ActionType.BUNDLE_START:\r\n      state[action.payload.id] = {\r\n        loading: true,\r\n        code: '',\r\n        err: '',\r\n      };\r\n      break;\r\n\r\n    case ActionType.BUNDLE_COMPLETE:\r\n      state[action.payload.id] = {\r\n        loading: false,\r\n        code: action.payload.bundle.code,\r\n        err: action.payload.bundle.err,\r\n      };\r\n      break;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}, initialState);\r\n\r\nexport default reducer;\r\n","import { Action } from '../actions';\r\nimport { ActionType } from '../action-types';\r\nimport produce from 'immer';\r\n\r\nexport interface Thread {\r\n  id: string;\r\n  name: string;\r\n  description: string | null;\r\n}\r\n\r\ninterface ThreadState {\r\n  data: {\r\n    [id: string]: Thread;\r\n  };\r\n  error: string | null;\r\n  loading: boolean;\r\n}\r\n\r\nconst initialThreadsState = {\r\n  data: {},\r\n  error: null,\r\n  loading: false,\r\n};\r\n\r\nconst reducer = produce((state: ThreadState = initialThreadsState, action: Action) => {\r\n  switch (action.type) {\r\n    case ActionType.CREATE_THREAD:\r\n      {\r\n        const { name, description, id } = action.payload;\r\n        const thread = {\r\n          id,\r\n          name,\r\n          description,\r\n        };\r\n        state.data[thread.id] = thread;\r\n      }\r\n      break;\r\n\r\n    case ActionType.UPDATE_THREAD:\r\n      {\r\n        const { name, description, id } = action.payload;\r\n        state.data[id].name = name;\r\n        state.data[id].description = description;\r\n      }\r\n      break;\r\n\r\n    case ActionType.DELETE_THREAD:\r\n      delete state.data[action.payload];\r\n\r\n      break;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}, initialThreadsState);\r\n\r\nexport default reducer;\r\n","import { combineReducers } from 'redux';\r\nimport cellsReducer from './cellsReducer';\r\nimport bundlesReducer from './bundlesReducer';\r\nimport threadsReducer from './threadsReducer';\r\n\r\nconst reducers = combineReducers({\r\n  //Top-level state reference - `cells`, handled by `cellsReducer` etc\r\n  cells: cellsReducer,\r\n  bundles: bundlesReducer,\r\n  threads: threadsReducer,\r\n});\r\n\r\nexport default reducers;\r\nexport type RootState = ReturnType<typeof reducers>;\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport reducers from './reducers';\r\n\r\nexport const store = createStore(reducers, {}, applyMiddleware(thunk));\r\n","import axios from 'axios';\r\nimport * as esbuild from 'esbuild-wasm';\r\nimport localforage from 'localforage';\r\n\r\n//Create cache layer in client's browser\r\nconst clientCache = localforage.createInstance({\r\n  name: 'fileCache',\r\n});\r\n\r\nexport const fetchPlugin = (input: string) => {\r\n  return {\r\n    name: 'fetch-plugin',\r\n    setup(build: esbuild.PluginBuild) {\r\n      //Entry point load\r\n      build.onLoad({ filter: /(^index\\.js$)/ }, () => {\r\n        return {\r\n          loader: 'jsx',\r\n          contents: input,\r\n        };\r\n      });\r\n      //Check if cached\r\n      build.onLoad({ filter: /.*/ }, async (args: esbuild.OnLoadArgs) => {\r\n        const cachedResult = await clientCache.getItem<esbuild.OnLoadResult>(args.path);\r\n        if (cachedResult) {\r\n          return cachedResult;\r\n        }\r\n      });\r\n      //Handle css files\r\n      build.onLoad({ filter: /.css$/ }, async (args: esbuild.OnLoadArgs) => {\r\n        const { data, request } = await axios.get(args.path);\r\n        const escaped = data.replace(/\\n/g, '').replace(/\"/g, '\\\\\"').replace(/'/g, \"\\\\'\");\r\n        const contents = `\r\n        const style = document.createElement('style');\r\n        style.innerText = '${escaped}';\r\n        document.head.appendChild(style);\r\n        `;\r\n\r\n        const result: esbuild.OnLoadResult = {\r\n          loader: 'jsx',\r\n          contents,\r\n          resolveDir: new URL('./', request.responseURL).pathname,\r\n        };\r\n        await clientCache.setItem(args.path, result);\r\n        return result;\r\n      });\r\n      //Handle js and all other files\r\n      build.onLoad({ filter: /.*/ }, async (args: esbuild.OnLoadArgs) => {\r\n        const { data, request } = await axios.get(args.path);\r\n\r\n        const result: esbuild.OnLoadResult = {\r\n          loader: 'jsx',\r\n          contents: data,\r\n          resolveDir: new URL('./', request.responseURL).pathname,\r\n        };\r\n        await clientCache.setItem(args.path, result);\r\n        return result;\r\n      });\r\n    },\r\n  };\r\n};\r\n","import * as esbuild from 'esbuild-wasm';\r\nimport { unpkgPlugin } from './plugin/unpkPlugin';\r\nimport { fetchPlugin } from './plugin/fetchPlugin';\r\n\r\nlet service: esbuild.Service;\r\nconst bundle = async (rawCode: string) => {\r\n  if (!service) {\r\n    service = await esbuild.startService({\r\n      wasmURL: 'https://unpkg.com/esbuild-wasm@0.8.27/esbuild.wasm',\r\n      worker: true,\r\n    });\r\n  }\r\n\r\n  try {\r\n    const result = await service.build({\r\n      entryPoints: ['index.js'],\r\n      bundle: true,\r\n      write: false,\r\n      plugins: [unpkgPlugin(), fetchPlugin(rawCode)],\r\n      define: {\r\n        'process.env.NODE_ENV': \"'production'\",\r\n        global: 'window',\r\n      },\r\n      jsxFactory: '_React.createElement',\r\n      jsxFragment: '_React.Fragment',\r\n    });\r\n    return { code: result.outputFiles[0].text, err: '' };\r\n  } catch (err) {\r\n    if (err instanceof Error) {\r\n      return { code: '', err: err.message };\r\n    } else {\r\n      throw err;\r\n    }\r\n  }\r\n};\r\n\r\nexport default bundle;\r\n","import * as esbuild from 'esbuild-wasm';\r\n\r\n//Intercept esbuild accessing fs\r\nexport const unpkgPlugin = () => {\r\n  return {\r\n    name: 'unpkg-plugin',\r\n    setup(build: esbuild.PluginBuild) {\r\n      //1st call: Handle root entry from imaginary index.js\r\n      build.onResolve({ filter: /(^index\\.js$)/ }, (args: esbuild.OnResolveArgs) => {\r\n        return { path: args.path, namespace: 'a' };\r\n      });\r\n      //2nd call: Handle required module name\r\n      build.onResolve({ filter: /^[a-z]+/i }, async (args: esbuild.OnResolveArgs) => {\r\n        return { path: `https://unpkg.com/${args.path}`, namespace: 'a' };\r\n      });\r\n      //3rd call: Handle relative paths inside modules\r\n      build.onResolve({ filter: /^\\.+\\// }, async (args: esbuild.OnResolveArgs) => {\r\n        const path = new URL(args.path, 'https://unpkg.com' + args.resolveDir + '/').href;\r\n        return { path: path, namespace: 'a' };\r\n      });\r\n    },\r\n  };\r\n};\r\n","import { Dispatch } from 'redux';\r\nimport {\r\n  UpdateCell,\r\n  DeleteCell,\r\n  MoveCell,\r\n  InsertCell,\r\n  Action,\r\n  DeleteThread,\r\n  UpdateThread,\r\n} from '../actions';\r\nimport bundle from '../../bundler';\r\nimport { ActionType } from '../action-types';\r\nimport { CellTypes, Direction } from '../cell';\r\nimport { randomId } from '../cell';\r\n\r\nexport const updateCell = (threadID: string, cellID: string, content: string): UpdateCell => {\r\n  return {\r\n    type: ActionType.UPDATE_CELL,\r\n    payload: {\r\n      threadID,\r\n      cellID,\r\n      content,\r\n    },\r\n  };\r\n};\r\n\r\nexport const deleteCell = (threadID: string, cellID: string): DeleteCell => {\r\n  return {\r\n    type: ActionType.DELETE_CELL,\r\n    payload: {\r\n      threadID,\r\n      cellID,\r\n    },\r\n  };\r\n};\r\n\r\nexport const moveCell = (threadID: string, cellID: string, direction: Direction): MoveCell => {\r\n  return {\r\n    type: ActionType.MOVE_CELL,\r\n    payload: {\r\n      threadID,\r\n      cellID,\r\n      direction,\r\n    },\r\n  };\r\n};\r\n\r\nexport const insertCell = (\r\n  threadID: string,\r\n  cellID: string | null,\r\n  type: CellTypes\r\n): InsertCell => {\r\n  return {\r\n    type: ActionType.INSERT_CELL,\r\n    payload: {\r\n      threadID,\r\n      cellID,\r\n      type,\r\n    },\r\n  };\r\n};\r\n\r\nexport const createBundle = (id: string, rawCode: string) => async (dispatch: Dispatch<Action>) => {\r\n  dispatch({\r\n    type: ActionType.BUNDLE_START,\r\n    payload: { id },\r\n  });\r\n\r\n  const res = await bundle(rawCode);\r\n\r\n  dispatch({\r\n    type: ActionType.BUNDLE_COMPLETE,\r\n    payload: {\r\n      id,\r\n      bundle: res,\r\n    },\r\n  });\r\n};\r\n\r\nexport const createThread =\r\n  (name: string, description: string | null) => (dispatch: Dispatch<Action>) => {\r\n    const id = randomId();\r\n    dispatch({\r\n      type: ActionType.CREATE_THREAD,\r\n      payload: {\r\n        id,\r\n        name,\r\n        description,\r\n      },\r\n    });\r\n    dispatch({\r\n      type: ActionType.INITIALIZE_CELLS,\r\n      payload: id,\r\n    });\r\n  };\r\n\r\nexport const deleteThread = (id: string): DeleteThread => {\r\n  return {\r\n    type: ActionType.DELETE_THREAD,\r\n    payload: id,\r\n  };\r\n};\r\n\r\nexport const updateThread = (id: string, name: string, description: string): UpdateThread => {\r\n  return {\r\n    type: ActionType.UPDATE_THREAD,\r\n    payload: {\r\n      id,\r\n      name,\r\n      description,\r\n    },\r\n  };\r\n};\r\n","import { Link } from \"react-router-dom\";\r\nimport { useState, useEffect } from \"react\";\r\nimport \"./navbar.css\";\r\n\r\nconst Navbar: React.FC = () => {\r\n  const [isScrolled, setIsScrolled] = useState(false);\r\n\r\n  const changeBG = () => {\r\n    if (window.scrollY > 300) {\r\n      setIsScrolled(true);\r\n    } else {\r\n      setIsScrolled(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"scroll\", changeBG);\r\n    return () => {\r\n      window.removeEventListener(\"scroll\", changeBG);\r\n    };\r\n  }, []);\r\n  return (\r\n    <div className={isScrolled ? \"nav-sticky scrolled\" : \"nav-sticky\"}>\r\n      <div className=\"navbar\">\r\n        <div className=\"logo\">\r\n          <h3>CODEPENCIL</h3>\r\n        </div>\r\n\r\n        <ul className=\"links\">\r\n          <li>\r\n            <Link to=\"/\">Home</Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/threads\">Threads</Link>\r\n          </li>\r\n          <li>\r\n            <a\r\n              href=\"https://github.com/doutdes0\"\r\n              target=\"_blank\"\r\n              rel=\"noreferrer\"\r\n            >\r\n              Contacts\r\n            </a>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","export default __webpack_public_path__ + \"static/media/github-logo.0d286971.svg\";","import github_logo from '../../assets/github-logo.svg';\r\nimport './footer.css';\r\n\r\nconst Footer: React.FC = () => {\r\n  return (\r\n    <div className=\"footer\">\r\n      <div className=\"footer-content\">\r\n        <p>©2023 Codepencil</p>\r\n        <p>Artem Gromakov</p>\r\n        <a\r\n          href=\"https://github.com/doutdes0\"\r\n          target=\"_blank\"\r\n          rel=\"noreferrer\"\r\n        >\r\n          <img\r\n            src={github_logo}\r\n            alt=\"github-logo\"\r\n          />\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import Navbar from './components/NavBar';\r\nimport { Outlet, ScrollRestoration } from 'react-router-dom';\r\nimport Footer from './components/Footer';\r\nimport '@fortawesome/fontawesome-free/css/all.min.css';\r\nimport './styles/styles.css';\r\n\r\nconst App: React.FC = () => {\r\n  return (\r\n    <div className=\"root-layout\">\r\n      <Navbar />\r\n      <Outlet />\r\n      <Footer />\r\n      <ScrollRestoration />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","export default __webpack_public_path__ + \"static/media/showcase1.4a42686b.png\";","export default __webpack_public_path__ + \"static/media/showcase2.e555c050.png\";","import showcase1 from \"../assets/showcase1.png\";\r\nimport showcase2 from \"../assets/showcase2.png\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./home.css\";\r\n\r\nconst Home: React.FC = () => {\r\n  return (\r\n    <>\r\n      <div className=\"hero-wrapper\">\r\n        <h2>Welcome to Codepencil.</h2>\r\n        <h4>A code sandbox.</h4>\r\n        <div className=\"hero hero-1\">\r\n          <div className=\"hero-story\">\r\n            <h3>Create, build fast and behold the beauty of your work!</h3>\r\n            <p>\r\n              Simply import any package from npm, given it's optimized for\r\n              in-browser bundling, and you're ready to go. <br /> We've already\r\n              preinstalled <strong>React</strong> and <strong>ReactDOM</strong>{\" \"}\r\n              for you! <br />\r\n              You don't have to set it up, just use the{\" \"}\r\n              <code>show{\"(<App/>)\"}</code> function to display components and\r\n              other data types. <br />\r\n              And, most conviniently, variables from previous codecells can be\r\n              accessed in following ones.\r\n            </p>\r\n          </div>\r\n          <div className=\"hero-card hero-card-1\">\r\n            <div className=\"hero-showcase\">\r\n              <img src={showcase1} alt=\"editor-showcase\" />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"hero-wrapper\">\r\n        <div className=\"hero bttm-left-grad\">\r\n          <div className=\"hero-card hero-card-2\">\r\n            <div className=\"hero-showcase\">\r\n              <img src={showcase2} alt=\"editor-showcase\" />\r\n            </div>\r\n          </div>\r\n          <div className=\"hero-story\">\r\n            <h3>Supply your code with useful notes!</h3>\r\n            <p>\r\n              Writing notes is as easy as creating a README file with the help\r\n              of inbuilt markdown editor. <br />\r\n              This way you won't ever lose your train of thought. <br />\r\n              Now, what are you waiting for? Create your first thread and try\r\n              out the editors!\r\n            </p>\r\n            <Link to=\"/threads\">\r\n              <button className=\"action-btn\">Dive in!</button>\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import { useMemo } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport { actionCreators } from '../state';\r\n\r\nexport const useActions = () => {\r\n  const dispatch = useDispatch();\r\n  //Bind creators only ONCE\r\n  return useMemo(() => {\r\n    return bindActionCreators(actionCreators, dispatch);\r\n  }, [dispatch]);\r\n};\r\n","import { useActions } from '../../hooks/use-actions';\r\nimport { Fragment } from 'react';\r\nimport './action-bar.css';\r\n\r\ninterface ActionBarProps {\r\n  cellID: string;\r\n  type: string;\r\n  threadID: string;\r\n}\r\n\r\nconst ActionBar: React.FC<ActionBarProps> = ({ cellID, type, threadID }) => {\r\n  const { moveCell, deleteCell } = useActions();\r\n  return (\r\n    <Fragment>\r\n      <div className=\"action-bar-wrapper\">\r\n        <div className=\"mark\">\r\n          <span className=\"icon\">\r\n            {type === 'code' && <i className=\"fas fa-code\"></i>}\r\n            {type === 'text' && <i className=\"fas fa-pencil-alt\"></i>}\r\n          </span>\r\n        </div>\r\n        <button\r\n          title=\"Move cell up\"\r\n          onClick={() => moveCell(threadID, cellID, 'up')}\r\n        >\r\n          <span className=\"icon\">\r\n            <i className=\"fas fa-angle-double-up\"></i>\r\n          </span>\r\n        </button>\r\n        <button\r\n          title=\"Move cell down\"\r\n          onClick={() => moveCell(threadID, cellID, 'down')}\r\n        >\r\n          <span className=\"icon\">\r\n            <i className=\"fas fa-angle-double-down\"></i>\r\n          </span>\r\n        </button>\r\n        <button\r\n          title=\"Delete cell\"\r\n          onClick={() => deleteCell(threadID, cellID)}\r\n        >\r\n          <span className=\"icon\">\r\n            <i className=\"fas fa-times\"></i>\r\n          </span>\r\n        </button>\r\n      </div>\r\n      <div className=\"action-bar-divider\"></div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ActionBar;\r\n","import MonacoEditor, { EditorDidMount } from '@monaco-editor/react';\r\nimport prettier from 'prettier';\r\nimport parser from 'prettier/parser-babel';\r\nimport codeShift from 'jscodeshift';\r\nimport Highlighter from 'monaco-jsx-highlighter';\r\nimport { useRef } from 'react';\r\nimport { editor } from 'monaco-editor';\r\nimport './code-editor.css';\r\n\r\ninterface CodeEditorProps {\r\n  initialValue: string;\r\n  onChange(value: string): void;\r\n}\r\n\r\nconst CodeEditor: React.FC<CodeEditorProps> = ({ initialValue, onChange }) => {\r\n  //Reference the instance of editor to use in other methods\r\n  const editorRef = useRef<editor.IStandaloneCodeEditor>();\r\n\r\n  const onEditorDidMount: EditorDidMount = (getValue, monacoEditor) => {\r\n    editorRef.current = monacoEditor;\r\n    //Add in-built event listener for changes in editor, pass the value to onChange\r\n    monacoEditor.onDidChangeModelContent(() => {\r\n      onChange(getValue());\r\n    });\r\n    const highlighter = new Highlighter(\r\n      //@ts-ignore\r\n      window.monaco,\r\n      codeShift,\r\n      monacoEditor\r\n    );\r\n    highlighter.highLightOnDidChangeModelContent(\r\n      //Removing unnecessary error logs\r\n      () => {},\r\n      () => {},\r\n      undefined,\r\n      () => {}\r\n    );\r\n  };\r\n\r\n  const onFormat = () => {\r\n    //Get current value from editor\r\n    const unformated = editorRef.current!.getModel()!.getValue();\r\n    //Format\r\n    const formated = prettier.format(unformated, {\r\n      parser: 'babel',\r\n      plugins: [parser],\r\n      useTabs: false,\r\n      semi: true,\r\n      singleQuote: true,\r\n    });\r\n    //Push formated value back to editor\r\n    editorRef.current!.setValue(formated);\r\n  };\r\n  return (\r\n    <div className=\"code-wrapper\">\r\n      <button\r\n        className=\"format-btn\"\r\n        onClick={onFormat}\r\n      >\r\n        Format\r\n      </button>\r\n      <MonacoEditor\r\n        editorDidMount={onEditorDidMount}\r\n        value={initialValue}\r\n        className=\"code-editor\"\r\n        language=\"javascript\"\r\n        theme=\"dark\"\r\n        options={{\r\n          wordWrap: 'on',\r\n          minimap: { enabled: false },\r\n          showUnused: false,\r\n          folding: false,\r\n          lineNumbersMinChars: 3,\r\n          fontSize: 16,\r\n          scrollBeyondLastLine: false,\r\n          automaticLayout: true,\r\n          colorDecorators: true,\r\n          scrollbar: { alwaysConsumeMouseWheel: false },\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CodeEditor;\r\n","import React, { useRef, useEffect } from 'react';\r\nimport './iframe.css';\r\n\r\ninterface IframeProps {\r\n  code: string;\r\n  bundlerErr: string;\r\n}\r\n\r\nconst html = ` <html>\r\n<head></head>\r\n<body>\r\n  <div id=\"root\"></div>\r\n  <script>\r\n  const root = document.getElementById('root');\r\n  const handleError = (err) => {\r\n    root.innerHTML = '<div style=\"color:red;font-family: Consolas, Courier New, monospace;background-color:white;\">' + err + '</div>';\r\n    console.error(err);\r\n  };\r\n    window.addEventListener('error', (e) => {\r\n      e.preventDefault();\r\n      handleError(e.error)\r\n    });\r\n    window.addEventListener('message', (e) => {\r\n      try {\r\n        root.innerHTML = '';\r\n        eval(e.data);\r\n      } catch (err) {\r\n        handleError(err);\r\n      }\r\n    }, false);\r\n  </script>\r\n</body>\r\n</html>`;\r\n\r\nconst Iframe: React.FC<IframeProps> = ({ code, bundlerErr }) => {\r\n  const iframe = useRef<any>();\r\n\r\n  useEffect(() => {\r\n    //Reset iframe before each bundling/whenever code changes\r\n    iframe.current.srcDoc = html;\r\n    //Post a message from parent window to iframe, containing bundled code\r\n    setTimeout(() => {\r\n      iframe.current.contentWindow.postMessage(code, '*');\r\n    }, 50);\r\n  }, [code]);\r\n\r\n  return (\r\n    <div className=\"iframe-wrapper\">\r\n      <iframe\r\n        title=\"preview\"\r\n        ref={iframe}\r\n        srcDoc={html}\r\n        sandbox=\"allow-scripts\"\r\n      ></iframe>\r\n      {bundlerErr && <div className=\"bundler-error\">{bundlerErr}</div>}\r\n    </div>\r\n  );\r\n};\r\nexport default Iframe;\r\n","import { ResizableBox, ResizableBoxProps } from 'react-resizable';\r\nimport { useEffect, useState } from 'react';\r\nimport './resizable.css';\r\n\r\ninterface ResizableProps {\r\n  direction: 'vertical' | 'horizontal';\r\n  children: React.ReactNode;\r\n}\r\n\r\nconst Resizable: React.FC<ResizableProps> = ({ direction, children }) => {\r\n  const [innerWidth, setInnerWidth] = useState(window.innerWidth);\r\n  const [width, setWidth] = useState(window.innerWidth * 0.45);\r\n\r\n  useEffect(() => {\r\n    let timer: any;\r\n    const listener = () => {\r\n      if (timer) {\r\n        clearTimeout(timer);\r\n      }\r\n      timer = setTimeout(() => {\r\n        setInnerWidth(window.innerWidth);\r\n        if (width > window.innerWidth * 0.45) {\r\n          setWidth(window.innerWidth * 0.45);\r\n        }\r\n      }, 100);\r\n    };\r\n    window.addEventListener('resize', listener);\r\n    return () => {\r\n      window.removeEventListener('resize', listener);\r\n    };\r\n  }, [width]);\r\n\r\n  let resizableProps: ResizableBoxProps;\r\n  if (direction === 'vertical') {\r\n    resizableProps = {\r\n      className: 'resizable-container-v',\r\n      height: 400,\r\n      width: Infinity,\r\n      resizeHandles: ['s'],\r\n      minConstraints: [Infinity, 24],\r\n      maxConstraints: [Infinity, Infinity],\r\n    };\r\n  } else {\r\n    resizableProps = {\r\n      className: 'resizable-container-h',\r\n      height: Infinity,\r\n      width,\r\n      resizeHandles: ['e'],\r\n      minConstraints: [innerWidth * 0.2, Infinity],\r\n      maxConstraints: [innerWidth * 0.75, Infinity],\r\n      onResizeStop: (e, data) => {\r\n        setWidth(data.size.width);\r\n      },\r\n    };\r\n  }\r\n  return <ResizableBox {...resizableProps}>{children}</ResizableBox>;\r\n};\r\n\r\nexport default Resizable;\r\n","import { useSelector, TypedUseSelectorHook } from 'react-redux';\r\nimport { RootState } from '../state';\r\n\r\n//Enable proper type checking when accessing the store\r\nexport const useTypedSelector: TypedUseSelectorHook<RootState> = useSelector;\r\n","import CodeEditor from '../CodeEditor';\r\nimport Iframe from '../Iframe';\r\nimport Resizable from '../Resizable';\r\nimport { useEffect } from 'react';\r\nimport { useActions } from '../../hooks/use-actions';\r\nimport { useTypedSelector } from '../../hooks/use-typed-selector';\r\nimport { useCumulativeCode } from '../../hooks/use-cumulative-code';\r\nimport { Cell } from '../../state';\r\nimport './codecell.css';\r\n\r\ninterface CodeCellProps {\r\n  threadID: string;\r\n  cell: Cell;\r\n}\r\n\r\nconst CodeCell: React.FC<CodeCellProps> = ({ threadID, cell }) => {\r\n  const { updateCell, createBundle } = useActions();\r\n  const cumulativeCode = useCumulativeCode(threadID, cell.id);\r\n  useEffect(() => {\r\n    if (!bundle) {\r\n      createBundle(cell.id, cell.content);\r\n      return;\r\n    }\r\n    const timer = setTimeout(async () => {\r\n      createBundle(cell.id, cumulativeCode!);\r\n    }, 1000);\r\n\r\n    return () => {\r\n      clearTimeout(timer);\r\n    };\r\n    //eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [cell.id, cumulativeCode, createBundle]);\r\n\r\n  const bundle = useTypedSelector((state) => state.bundles[cell.id]);\r\n  return (\r\n    <>\r\n      <Resizable direction=\"vertical\">\r\n        <div className=\"codecell\">\r\n          <Resizable direction=\"horizontal\">\r\n            <CodeEditor\r\n              onChange={(value) => updateCell(threadID, cell.id, value)}\r\n              initialValue={cell.content}\r\n            />\r\n          </Resizable>\r\n          {(!bundle || bundle.loading) && (\r\n            <div className=\"spinner-wrapper\">\r\n              <div className=\"loading-spinner\"></div>\r\n            </div>\r\n          )}\r\n          {bundle && (\r\n            <Iframe\r\n              code={bundle.code}\r\n              bundlerErr={bundle.err}\r\n            />\r\n          )}\r\n        </div>\r\n      </Resizable>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CodeCell;\r\n","import { useTypedSelector } from './use-typed-selector';\r\n\r\nexport const useCumulativeCode = (threadID: string, cellID: string) => {\r\n  return useTypedSelector((state) => {\r\n    const cells = state.cells.data[threadID];\r\n    const order = state.cells.order[threadID];\r\n\r\n    const orderedList = order.map((id) => cells[id]);\r\n    const cumulativeCode = [\r\n      `\r\n        import _React from 'react';\r\n        import _ReactDOM from 'react-dom';\r\n        const _root = _ReactDOM.createRoot(root);\r\n        const show = (val) => {\r\n          if(typeof val === 'object') {\r\n            if(val.$$typeof && val.props) {\r\n              _root.render(val);\r\n            } else {\r\n            root.innerHTML = JSON.stringify(val);\r\n            }\r\n          } else {\r\n            root.innerHTML = val;\r\n          }\r\n        }\r\n        `,\r\n    ];\r\n\r\n    for (let c of orderedList) {\r\n      if (c.type === 'code') {\r\n        if (c.id === cellID) {\r\n          cumulativeCode.push(c.content);\r\n          break;\r\n        } else {\r\n          const regex = /show(.*)/g;\r\n          cumulativeCode.push(c.content.replace(regex, ''));\r\n        }\r\n      }\r\n    }\r\n    return cumulativeCode.join('\\n');\r\n  });\r\n};\r\n","import MDEditor from '@uiw/react-md-editor';\r\nimport { useState, useEffect, useRef } from 'react';\r\nimport { useActions } from '../../hooks/use-actions';\r\nimport { Cell } from '../../state';\r\nimport './text-editor.css';\r\n\r\ninterface TextEditorProps {\r\n  threadID: string;\r\n  cell: Cell;\r\n}\r\n\r\nconst TextEditor: React.FC<TextEditorProps> = ({ threadID, cell }) => {\r\n  const { updateCell } = useActions();\r\n  const [editing, setEditing] = useState(false);\r\n  const editorRef = useRef<HTMLDivElement | null>(null);\r\n\r\n  useEffect(() => {\r\n    const listener = (e: MouseEvent) => {\r\n      if (editorRef.current && e.target && !editorRef.current.contains(e.target as Node)) {\r\n        setEditing(false);\r\n      }\r\n    };\r\n    document.addEventListener('click', listener, { capture: true });\r\n\r\n    return () => {\r\n      document.removeEventListener('click', listener, { capture: true });\r\n    };\r\n  }, []);\r\n\r\n  if (editing) {\r\n    return (\r\n      <div ref={editorRef}>\r\n        <div className=\"editor-wrapper\">\r\n          <MDEditor\r\n            value={cell.content}\r\n            height={window.innerHeight * 0.6}\r\n            onChange={(value) => updateCell(threadID, cell.id, value || '')}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div onClick={() => setEditing(true)}>\r\n      <div className=\"md-wrapper\">\r\n        <MDEditor.Markdown source={cell.content || 'Click me to edit'} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TextEditor;\r\n","import { Cell } from '../../state';\r\nimport ActionBar from '../ActionBar';\r\nimport CodeCell from '../CodeCell';\r\nimport TextEditor from '../TextEditor';\r\n\r\ninterface CellListItemProps {\r\n  threadID: string;\r\n  cell: Cell;\r\n}\r\n\r\nconst CellListItem: React.FC<CellListItemProps> = ({ threadID, cell }) => {\r\n  return (\r\n    <>\r\n      <ActionBar\r\n        cellID={cell.id}\r\n        type={cell.type}\r\n        threadID={threadID}\r\n      />\r\n      {cell.type === 'code' && (\r\n        <CodeCell\r\n          cell={cell}\r\n          threadID={threadID}\r\n        />\r\n      )}\r\n      {cell.type === 'text' && (\r\n        <TextEditor\r\n          cell={cell}\r\n          threadID={threadID}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CellListItem;\r\n","import { useActions } from '../../hooks/use-actions';\r\nimport './add-cell.css';\r\n\r\ninterface AddCellProps {\r\n  threadID: string;\r\n  nextCellID: string | null;\r\n  forceVisible?: boolean;\r\n}\r\n\r\nconst AddCell: React.FC<AddCellProps> = ({ threadID, nextCellID, forceVisible }) => {\r\n  const { insertCell } = useActions();\r\n  return (\r\n    <div className={`add-cell-wrapper ${forceVisible ? 'force-visible' : ''}`}>\r\n      <div className=\"divider\"></div>\r\n\r\n      <button\r\n        title=\"Add codecell\"\r\n        onClick={() => insertCell(threadID, nextCellID, 'code')}\r\n      >\r\n        <span className=\"icon\">\r\n          <i className=\"fas fa-code\"></i>\r\n        </span>\r\n      </button>\r\n\r\n      <button\r\n        title=\"Add textcell\"\r\n        onClick={() => insertCell(threadID, nextCellID, 'text')}\r\n      >\r\n        <span className=\"icon\">\r\n          <i className=\"fas fa-pencil-alt\"></i>\r\n        </span>\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddCell;\r\n","import { useTypedSelector } from '../../hooks/use-typed-selector';\r\nimport './cell-list-card.css';\r\n\r\ninterface CellListCardProps {\r\n  threadID: string;\r\n}\r\n\r\nconst CellListCard: React.FC<CellListCardProps> = ({ threadID }) => {\r\n  const { name, description } = useTypedSelector((state) => {\r\n    return state.threads.data[threadID];\r\n  });\r\n  return (\r\n    <div className=\"title-wrapper\">\r\n      <h2>{name}</h2>\r\n      <p>{description}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CellListCard;\r\n","import CellListItem from '../CellListItem/index';\r\nimport AddCell from '../AddCell/index';\r\nimport CellListCard from '../CellListCard';\r\nimport { useTypedSelector } from '../../hooks/use-typed-selector';\r\nimport { Fragment } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport './cell-list.css';\r\n\r\ninterface NavigateProps {\r\n  threadID: string;\r\n}\r\n\r\nconst CellList: React.FC = () => {\r\n  const location = useLocation();\r\n  const { threadID } = location.state as NavigateProps;\r\n  const cells = useTypedSelector((state) => {\r\n    return state.cells.order[threadID].map((id) => state.cells.data[threadID][id]);\r\n  });\r\n\r\n  return (\r\n    <div className=\"cell-list-wrapper\">\r\n      <CellListCard threadID={threadID} />\r\n      {cells.length === 0 && (\r\n        <AddCell\r\n          forceVisible={cells.length === 0}\r\n          nextCellID={null}\r\n          threadID={threadID}\r\n        />\r\n      )}\r\n\r\n      {cells.map((cell) => (\r\n        <Fragment key={cell.id}>\r\n          <CellListItem\r\n            key={cell.id}\r\n            cell={cell}\r\n            threadID={threadID}\r\n          />\r\n\r\n          <AddCell\r\n            nextCellID={cell.id}\r\n            threadID={threadID}\r\n          />\r\n        </Fragment>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CellList;\r\n","import { Thread } from '../../state/reducers/threadsReducer';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useActions } from '../../hooks/use-actions';\r\nimport { SyntheticEvent } from 'react';\r\nimport './thread-item.css';\r\n\r\ninterface ThreadListItemProps {\r\n  thread: Thread;\r\n}\r\n\r\nconst ThreadListItem: React.FC<ThreadListItemProps> = ({ thread: { name, description, id } }) => {\r\n  const navigate = useNavigate();\r\n  const { deleteThread } = useActions();\r\n  const onClickEdit = (e: SyntheticEvent) => {\r\n    e.stopPropagation();\r\n    navigate('/add-updThread', { state: { threadID: id, name, description } });\r\n  };\r\n  return (\r\n    <div\r\n      onClick={() => navigate('/cellList', { state: { threadID: id } })}\r\n      className=\"thread-item-wrapper\"\r\n    >\r\n      <h3>{name}</h3>\r\n      {description && <p>{description}</p>}\r\n      <div className=\"action-buttons\">\r\n        <button\r\n          onClick={(e) => onClickEdit(e)}\r\n          title=\"Edit thread\"\r\n        >\r\n          <span className=\"icon\">\r\n            <i className=\"fas fa-sm fa-pencil-alt\"></i>\r\n          </span>\r\n        </button>\r\n        <button\r\n          title=\"Delete thread\"\r\n          onClick={(e) => {\r\n            e.stopPropagation();\r\n            deleteThread(id);\r\n          }}\r\n        >\r\n          <span className=\"icon\">\r\n            <i className=\"fas fa-times\"></i>\r\n          </span>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ThreadListItem;\r\n","import { useNavigate } from 'react-router-dom';\r\nimport './add-thread-card.css';\r\n\r\nconst AddThreadCard: React.FC = () => {\r\n  const navigate = useNavigate();\r\n  return (\r\n    <div\r\n      onClick={() => navigate('/add-updThread')}\r\n      className=\"add-thread-item-wrapper\"\r\n    >\r\n      <div className=\"icon-wrapper\">\r\n        <span className=\"icon\">\r\n          <i className=\"fas fa-plus fa-3x fa-fade\"></i>\r\n        </span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddThreadCard;\r\n","import ThreadListItem from '../ThreadListItem';\r\nimport AddThreadCard from '../AddThreadCard';\r\nimport { useTypedSelector } from '../../hooks/use-typed-selector';\r\nimport { Fragment } from 'react';\r\nimport './thread-list.css';\r\n\r\nconst ThreadList: React.FC = () => {\r\n  const threads = useTypedSelector(({ threads: { data } }) => {\r\n    return Object.values(data);\r\n  });\r\n  return (\r\n    <div className=\"thread-list-wrapper\">\r\n      <AddThreadCard />\r\n      {threads.map((thread) => (\r\n        <Fragment key={thread.id}>\r\n          <ThreadListItem\r\n            key={thread.id}\r\n            thread={thread}\r\n          />\r\n        </Fragment>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ThreadList;\r\n","import { SyntheticEvent, useState } from 'react';\r\nimport { useActions } from '../../hooks/use-actions';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport './add-upd-thread.css';\r\n\r\ninterface NavigateProps {\r\n  threadID: string | null;\r\n  name: string | null;\r\n  description: string | null;\r\n}\r\n\r\nconst AddUpdThread: React.FC = () => {\r\n  const { createThread, updateThread } = useActions();\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const {\r\n    threadID,\r\n    name: currentName,\r\n    description: currentDescription,\r\n  } = location.state\r\n    ? (location.state as NavigateProps)\r\n    : { threadID: null, name: null, description: null };\r\n\r\n  const [name, setName] = useState(currentName ? currentName : '');\r\n  const [description, setDescription] = useState(currentDescription ? currentDescription : '');\r\n\r\n  const onSubmit = (e: SyntheticEvent) => {\r\n    e.preventDefault();\r\n    if (location.state) {\r\n      updateThread(threadID!, name, description);\r\n    } else {\r\n      createThread(name, description);\r\n    }\r\n\r\n    navigate('/threads');\r\n  };\r\n\r\n  return (\r\n    <div className=\"add-thread-wrapper\">\r\n      <form onSubmit={(e) => onSubmit(e)}>\r\n        <label htmlFor=\"name\">Name</label>\r\n        <input\r\n          onChange={(e) => setName(e.target.value)}\r\n          id=\"name\"\r\n          type=\"text\"\r\n          value={name}\r\n          autoComplete=\"off\"\r\n          maxLength={60}\r\n        />\r\n        <label htmlFor=\"description\">Description</label>\r\n        <textarea\r\n          onChange={(e) => setDescription(e.target.value)}\r\n          id=\"description\"\r\n          value={description}\r\n          cols={40}\r\n          rows={10}\r\n          maxLength={600}\r\n        ></textarea>\r\n        <div className=\"button-wrapper\">\r\n          <button type=\"submit\">{location.state ? 'Update' : 'Create'}</button>\r\n          <button\r\n            name=\"discard\"\r\n            onClick={() => navigate('/threads')}\r\n          >\r\n            {location.state ? 'Discard changes' : 'Discard'}\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddUpdThread;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport { createBrowserRouter, RouterProvider } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { store } from './state';\r\nimport App from './App';\r\nimport Home from './pages/home';\r\nimport CellList from './components/CellList';\r\nimport ThreadList from './components/ThreadList';\r\nimport AddUpdThread from './components/AddUpdThread';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root') as HTMLElement);\r\nconst router = createBrowserRouter(\r\n  [\r\n    {\r\n      path: '/',\r\n      element: <App />,\r\n      children: [\r\n        {\r\n          path: '/',\r\n          element: <Home />,\r\n        },\r\n        {\r\n          path: '/threads',\r\n          element: <ThreadList />,\r\n        },\r\n        {\r\n          path: '/cellList',\r\n          element: <CellList />,\r\n        },\r\n        {\r\n          path: '/add-updThread',\r\n          element: <AddUpdThread />,\r\n        },\r\n      ],\r\n    },\r\n  ],\r\n  { basename: '/Codepencil' }\r\n);\r\n\r\nroot.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <RouterProvider router={router} />\r\n    </Provider>\r\n  </React.StrictMode>\r\n);\r\n"],"sourceRoot":""}