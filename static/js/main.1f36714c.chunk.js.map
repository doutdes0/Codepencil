{"version":3,"sources":["state/action-types/index.ts","state/cell.ts","bundler/index.ts","state/reducers/cellsReducer.ts","state/reducers/bundlesReducer.ts","state/reducers/threadsReducer.ts","state/reducers/index.ts","state/store.ts","bundler/plugin/fetchPlugin.ts","bundler/plugin/unpkPlugin.ts","state/action-creators/index.ts","assets/logo.svg","components/NavBar/index.tsx","assets/github-logo.svg","components/Footer/index.tsx","App.tsx","assets/showcase1.png","assets/showcase2.png","pages/home.tsx","hooks/use-actions.ts","components/ActionBar/index.tsx","components/CodeEditor/index.tsx","components/Iframe/index.tsx","components/Resizable/index.tsx","hooks/use-typed-selector.ts","components/CodeCell/index.tsx","hooks/use-cumulative-code.ts","components/TextEditor/index.tsx","components/CellListItem/index.tsx","components/AddCell/index.tsx","components/CellListCard/index.tsx","components/CellList/index.tsx","components/ThreadListItem/index.tsx","components/AddThreadCard/index.tsx","components/ThreadList/index.tsx","components/AddUpdThread/index.tsx","index.tsx"],"names":["ActionType","service","randomId","Math","random","toString","substring","initialState","data","loading","error","order","reducer","produce","state","arguments","length","undefined","action","type","DELETE_CELL","_action$payload","payload","threadID","cellID","filter","id","UPDATE_CELL","_action$payload2","content","MOVE_CELL","_action$payload3","direction","i","findIndex","targetI","_ref","INSERT_CELL","_action$payload4","cell","unshift","splice","INITIALIZE_CELLS","BUNDLE_START","code","err","BUNDLE_COMPLETE","bundle","initialThreadsState","CREATE_THREAD","name","description","thread","UPDATE_THREAD","DELETE_THREAD","reducers","combineReducers","cells","cellsReducer","bundles","bundlesReducer","threads","threadsReducer","store","createStore","applyMiddleware","thunk","clientCache","localforage","createInstance","fetchPlugin","input","setup","build","onLoad","loader","contents","_asyncToGenerator","_regeneratorRuntime","mark","_callee","args","cachedResult","wrap","_context","prev","next","getItem","path","sent","abrupt","stop","_x","apply","_ref2","_callee2","_yield$axios$get","request","escaped","result","_context2","axios","get","replace","concat","resolveDir","URL","responseURL","pathname","setItem","_x2","_ref3","_callee3","_yield$axios$get2","_context3","_x3","rawCode","esbuild","wasmURL","worker","entryPoints","write","plugins","onResolve","namespace","href","define","global","jsxFactory","jsxFragment","outputFiles","text","t0","Error","message","updateCell","deleteCell","moveCell","insertCell","createBundle","dispatch","res","createThread","console","log","deleteThread","updateThread","Navbar","_useState","useState","_useState2","_slicedToArray","isScrolled","setIsScrolled","changeBG","window","scrollY","useEffect","addEventListener","removeEventListener","_jsx","className","children","_jsxs","src","logo","alt","Link","to","target","rel","Footer","github_logo","App","Outlet","ScrollRestoration","Home","_Fragment","showcase1","showcase2","useActions","useDispatch","useMemo","bindActionCreators","actionCreators","ActionBar","_useActions","Fragment","title","onClick","CodeEditor","initialValue","onChange","editorRef","useRef","unformated","current","getModel","getValue","formated","prettier","format","parser","useTabs","semi","singleQuote","setValue","MonacoEditor","editorDidMount","monacoEditor","onDidChangeModelContent","Highlighter","monaco","codeShift","highLightOnDidChangeModelContent","value","language","theme","options","wordWrap","minimap","enabled","showUnused","folding","lineNumbersMinChars","fontSize","scrollBeyondLastLine","automaticLayout","colorDecorators","scrollbar","alwaysConsumeMouseWheel","html","Iframe","bundlerErr","iframe","srcDoc","setTimeout","contentWindow","postMessage","ref","sandbox","Resizable","resizableProps","innerWidth","setInnerWidth","_useState3","_useState4","width","setWidth","timer","listener","clearTimeout","height","Infinity","resizeHandles","minConstraints","maxConstraints","onResizeStop","e","size","ResizableBox","_objectSpread","useTypedSelector","useSelector","CodeCell","cumulativeCode","_step","orderedList","map","_iterator","_createForOfIteratorHelper","s","n","done","c","push","f","join","useCumulativeCode","TextEditor","editing","setEditing","contains","document","capture","MDEditor","innerHeight","Markdown","source","CellListItem","AddCell","nextCellID","forceVisible","CellListCard","_useTypedSelector","CellList","useLocation","ThreadListItem","_ref$thread","navigate","useNavigate","stopPropagation","onClickEdit","AddThreadCard","ThreadList","Object","values","AddUpdThread","location","currentName","currentDescription","setName","setDescription","onSubmit","preventDefault","htmlFor","autoComplete","maxLength","cols","rows","root","ReactDOM","createRoot","getElementById","router","createBrowserRouter","element","basename","render","React","StrictMode","Provider","RouterProvider"],"mappings":"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","file":"static/js/main.1f36714c.chunk.js","sourcesContent":["export enum ActionType {\r\n  UPDATE_CELL = 'update_cell',\r\n  DELETE_CELL = 'delete_cell',\r\n  MOVE_CELL = 'move_cell',\r\n  INSERT_CELL = 'insert_cell',\r\n  BUNDLE_START = 'bundle_start',\r\n  BUNDLE_COMPLETE = 'bundle_complete',\r\n  CREATE_THREAD = 'create_trhread',\r\n  DELETE_THREAD = 'delete_thread',\r\n  INITIALIZE_CELLS = 'initialize_cells',\r\n  UPDATE_THREAD = 'update_thread',\r\n}\r\n","export type CellTypes = 'code' | 'text';\r\nexport type Direction = 'up' | 'down';\r\n\r\nexport interface Cell {\r\n  id: string;\r\n  type: CellTypes;\r\n  content: string;\r\n}\r\n\r\nexport const randomId = () => {\r\n  return Math.random().toString(36).substring(0, 4);\r\n};\r\n","import * as esbuild from 'esbuild-wasm';\r\nimport { unpkgPlugin } from './plugin/unpkPlugin';\r\nimport { fetchPlugin } from './plugin/fetchPlugin';\r\n\r\nlet service: esbuild.Service;\r\nconst bundle = async (rawCode: string) => {\r\n  if (!service) {\r\n    service = await esbuild.startService({\r\n      wasmURL: 'https://unpkg.com/esbuild-wasm@0.8.27/esbuild.wasm',\r\n      worker: true,\r\n    });\r\n  }\r\n\r\n  try {\r\n    const result = await service.build({\r\n      entryPoints: ['index.js'],\r\n      bundle: true,\r\n      write: false,\r\n      plugins: [unpkgPlugin(), fetchPlugin(rawCode)],\r\n      define: {\r\n        'process.env.NODE_ENV': \"'production'\",\r\n        global: 'window',\r\n      },\r\n      jsxFactory: '_React.createElement',\r\n      jsxFragment: '_React.Fragment',\r\n    });\r\n    return { code: result.outputFiles[0].text, err: '' };\r\n  } catch (err) {\r\n    if (err instanceof Error) {\r\n      return { code: '', err: err.message };\r\n    } else {\r\n      throw err;\r\n    }\r\n  }\r\n};\r\n\r\nexport default bundle;\r\n","import { Action } from '../actions';\r\nimport { ActionType } from '../action-types';\r\nimport { Cell, randomId } from '../cell';\r\nimport produce from 'immer';\r\n\r\nexport interface CellState {\r\n  data: { [threadID: string]: { [cellID: string]: Cell } };\r\n  loading: boolean;\r\n  error: string | null;\r\n  order: { [threadID: string]: string[] };\r\n}\r\n\r\nexport const initialState: CellState = {\r\n  data: {},\r\n  loading: false,\r\n  error: null,\r\n  order: {},\r\n};\r\n\r\nconst reducer = produce((state: CellState = initialState, action: Action) => {\r\n  switch (action.type) {\r\n    case ActionType.DELETE_CELL:\r\n      {\r\n        const { threadID, cellID } = action.payload;\r\n        delete state.data[threadID][cellID];\r\n        state.order[threadID] = state.order[threadID].filter((id) => id !== cellID);\r\n      }\r\n      break;\r\n\r\n    case ActionType.UPDATE_CELL:\r\n      {\r\n        const { threadID, cellID, content } = action.payload;\r\n        state.data[threadID][cellID].content = content;\r\n      }\r\n      break;\r\n\r\n    case ActionType.MOVE_CELL:\r\n      {\r\n        const { threadID, cellID, direction } = action.payload;\r\n        const i = state.order[threadID].findIndex((id) => id === cellID);\r\n        const targetI = direction === 'up' ? i - 1 : i + 1;\r\n        if (targetI < 0 || targetI > state.order[threadID].length - 1) return;\r\n        [state.order[threadID][i], state.order[threadID][targetI]] = [\r\n          state.order[threadID][targetI],\r\n          state.order[threadID][i],\r\n        ];\r\n      }\r\n      break;\r\n\r\n    case ActionType.INSERT_CELL:\r\n      {\r\n        const { threadID, cellID, type } = action.payload;\r\n        const cell: Cell = {\r\n          content: '',\r\n          type,\r\n          id: randomId(),\r\n        };\r\n        state.data[threadID][cell.id] = cell;\r\n        const i = state.order[threadID].findIndex((id) => id === cellID);\r\n        if (i < 0) {\r\n          state.order[threadID].unshift(cell.id);\r\n        } else {\r\n          state.order[threadID].splice(i + 1, 0, cell.id);\r\n        }\r\n      }\r\n      break;\r\n\r\n    case ActionType.INITIALIZE_CELLS:\r\n      state.data[action.payload] = {};\r\n      state.order[action.payload] = [];\r\n\r\n      break;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}, initialState);\r\n\r\nexport default reducer;\r\n","import { Action } from '../actions';\r\nimport { ActionType } from '../action-types';\r\nimport produce from 'immer';\r\n\r\ninterface BundleState {\r\n  [id: string]:\r\n    | {\r\n        loading: boolean;\r\n        code: string;\r\n        err: string;\r\n      }\r\n    | undefined;\r\n}\r\n\r\nconst initialState: BundleState = {};\r\n\r\nconst reducer = produce((state: BundleState = initialState, action: Action) => {\r\n  switch (action.type) {\r\n    case ActionType.BUNDLE_START:\r\n      state[action.payload.id] = {\r\n        loading: true,\r\n        code: '',\r\n        err: '',\r\n      };\r\n      break;\r\n\r\n    case ActionType.BUNDLE_COMPLETE:\r\n      state[action.payload.id] = {\r\n        loading: false,\r\n        code: action.payload.bundle.code,\r\n        err: action.payload.bundle.err,\r\n      };\r\n      break;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}, initialState);\r\n\r\nexport default reducer;\r\n","import { Action } from '../actions';\r\nimport { ActionType } from '../action-types';\r\nimport produce from 'immer';\r\n\r\nexport interface Thread {\r\n  id: string;\r\n  name: string;\r\n  description: string | null;\r\n}\r\n\r\ninterface ThreadState {\r\n  data: {\r\n    [id: string]: Thread;\r\n  };\r\n  error: string | null;\r\n  loading: boolean;\r\n}\r\n\r\nconst initialThreadsState = {\r\n  data: {},\r\n  error: null,\r\n  loading: false,\r\n};\r\n\r\nconst reducer = produce((state: ThreadState = initialThreadsState, action: Action) => {\r\n  switch (action.type) {\r\n    case ActionType.CREATE_THREAD:\r\n      {\r\n        const { name, description, id } = action.payload;\r\n        const thread = {\r\n          id,\r\n          name,\r\n          description,\r\n        };\r\n        state.data[thread.id] = thread;\r\n      }\r\n      break;\r\n\r\n    case ActionType.UPDATE_THREAD:\r\n      {\r\n        const { name, description, id } = action.payload;\r\n        state.data[id].name = name;\r\n        state.data[id].description = description;\r\n      }\r\n      break;\r\n\r\n    case ActionType.DELETE_THREAD:\r\n      delete state.data[action.payload];\r\n\r\n      break;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}, initialThreadsState);\r\n\r\nexport default reducer;\r\n","import { combineReducers } from 'redux';\r\nimport cellsReducer from './cellsReducer';\r\nimport bundlesReducer from './bundlesReducer';\r\nimport threadsReducer from './threadsReducer';\r\n\r\nconst reducers = combineReducers({\r\n  //Top-level state reference - `cells`, handled by `cellsReducer` etc\r\n  cells: cellsReducer,\r\n  bundles: bundlesReducer,\r\n  threads: threadsReducer,\r\n});\r\n\r\nexport default reducers;\r\nexport type RootState = ReturnType<typeof reducers>;\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport reducers from './reducers';\r\n\r\nexport const store = createStore(reducers, {}, applyMiddleware(thunk));\r\n","import axios from 'axios';\r\nimport * as esbuild from 'esbuild-wasm';\r\nimport localforage from 'localforage';\r\n\r\n//Create cache layer in client's browser\r\nconst clientCache = localforage.createInstance({\r\n  name: 'fileCache',\r\n});\r\n\r\nexport const fetchPlugin = (input: string) => {\r\n  return {\r\n    name: 'fetch-plugin',\r\n    setup(build: esbuild.PluginBuild) {\r\n      //Entry point load\r\n      build.onLoad({ filter: /(^index\\.js$)/ }, () => {\r\n        return {\r\n          loader: 'jsx',\r\n          contents: input,\r\n        };\r\n      });\r\n      //Check if cached\r\n      build.onLoad({ filter: /.*/ }, async (args: esbuild.OnLoadArgs) => {\r\n        const cachedResult = await clientCache.getItem<esbuild.OnLoadResult>(args.path);\r\n        if (cachedResult) {\r\n          return cachedResult;\r\n        }\r\n      });\r\n      //Handle css files\r\n      build.onLoad({ filter: /.css$/ }, async (args: esbuild.OnLoadArgs) => {\r\n        const { data, request } = await axios.get(args.path);\r\n        const escaped = data.replace(/\\n/g, '').replace(/\"/g, '\\\\\"').replace(/'/g, \"\\\\'\");\r\n        const contents = `\r\n        const style = document.createElement('style');\r\n        style.innerText = '${escaped}';\r\n        document.head.appendChild(style);\r\n        `;\r\n\r\n        const result: esbuild.OnLoadResult = {\r\n          loader: 'jsx',\r\n          contents,\r\n          resolveDir: new URL('./', request.responseURL).pathname,\r\n        };\r\n        await clientCache.setItem(args.path, result);\r\n        return result;\r\n      });\r\n      //Handle js and all other files\r\n      build.onLoad({ filter: /.*/ }, async (args: esbuild.OnLoadArgs) => {\r\n        const { data, request } = await axios.get(args.path);\r\n\r\n        const result: esbuild.OnLoadResult = {\r\n          loader: 'jsx',\r\n          contents: data,\r\n          resolveDir: new URL('./', request.responseURL).pathname,\r\n        };\r\n        await clientCache.setItem(args.path, result);\r\n        return result;\r\n      });\r\n    },\r\n  };\r\n};\r\n","import * as esbuild from 'esbuild-wasm';\r\n\r\n//Intercept esbuild accessing fs\r\nexport const unpkgPlugin = () => {\r\n  return {\r\n    name: 'unpkg-plugin',\r\n    setup(build: esbuild.PluginBuild) {\r\n      //1st call: Handle root entry from imaginary index.js\r\n      build.onResolve({ filter: /(^index\\.js$)/ }, (args: esbuild.OnResolveArgs) => {\r\n        return { path: args.path, namespace: 'a' };\r\n      });\r\n      //2nd call: Handle required module name\r\n      build.onResolve({ filter: /^[a-z]+/i }, async (args: esbuild.OnResolveArgs) => {\r\n        return { path: `https://unpkg.com/${args.path}`, namespace: 'a' };\r\n      });\r\n      //3rd call: Handle relative paths inside modules\r\n      build.onResolve({ filter: /^\\.+\\// }, async (args: esbuild.OnResolveArgs) => {\r\n        const path = new URL(args.path, 'https://unpkg.com' + args.resolveDir + '/').href;\r\n        return { path: path, namespace: 'a' };\r\n      });\r\n    },\r\n  };\r\n};\r\n","import { Dispatch } from 'redux';\r\nimport {\r\n  UpdateCell,\r\n  DeleteCell,\r\n  MoveCell,\r\n  InsertCell,\r\n  Action,\r\n  DeleteThread,\r\n  UpdateThread,\r\n} from '../actions';\r\nimport bundle from '../../bundler';\r\nimport { ActionType } from '../action-types';\r\nimport { CellTypes, Direction } from '../cell';\r\nimport { randomId } from '../cell';\r\n\r\nexport const updateCell = (threadID: string, cellID: string, content: string): UpdateCell => {\r\n  return {\r\n    type: ActionType.UPDATE_CELL,\r\n    payload: {\r\n      threadID,\r\n      cellID,\r\n      content,\r\n    },\r\n  };\r\n};\r\n\r\nexport const deleteCell = (threadID: string, cellID: string): DeleteCell => {\r\n  return {\r\n    type: ActionType.DELETE_CELL,\r\n    payload: {\r\n      threadID,\r\n      cellID,\r\n    },\r\n  };\r\n};\r\n\r\nexport const moveCell = (threadID: string, cellID: string, direction: Direction): MoveCell => {\r\n  return {\r\n    type: ActionType.MOVE_CELL,\r\n    payload: {\r\n      threadID,\r\n      cellID,\r\n      direction,\r\n    },\r\n  };\r\n};\r\n\r\nexport const insertCell = (\r\n  threadID: string,\r\n  cellID: string | null,\r\n  type: CellTypes\r\n): InsertCell => {\r\n  return {\r\n    type: ActionType.INSERT_CELL,\r\n    payload: {\r\n      threadID,\r\n      cellID,\r\n      type,\r\n    },\r\n  };\r\n};\r\n\r\nexport const createBundle = (id: string, rawCode: string) => async (dispatch: Dispatch<Action>) => {\r\n  dispatch({\r\n    type: ActionType.BUNDLE_START,\r\n    payload: { id },\r\n  });\r\n\r\n  const res = await bundle(rawCode);\r\n\r\n  dispatch({\r\n    type: ActionType.BUNDLE_COMPLETE,\r\n    payload: {\r\n      id,\r\n      bundle: res,\r\n    },\r\n  });\r\n};\r\n\r\nexport const createThread =\r\n  (name: string, description: string | null) => (dispatch: Dispatch<Action>) => {\r\n    const id = randomId();\r\n    dispatch({\r\n      type: ActionType.CREATE_THREAD,\r\n      payload: {\r\n        id,\r\n        name,\r\n        description,\r\n      },\r\n    });\r\n    dispatch({\r\n      type: ActionType.INITIALIZE_CELLS,\r\n      payload: id,\r\n    });\r\n    console.log('thread created');\r\n  };\r\n\r\nexport const deleteThread = (id: string): DeleteThread => {\r\n  return {\r\n    type: ActionType.DELETE_THREAD,\r\n    payload: id,\r\n  };\r\n};\r\n\r\nexport const updateThread = (id: string, name: string, description: string): UpdateThread => {\r\n  return {\r\n    type: ActionType.UPDATE_THREAD,\r\n    payload: {\r\n      id,\r\n      name,\r\n      description,\r\n    },\r\n  };\r\n};\r\n","export default __webpack_public_path__ + \"static/media/logo.e6ebb4f3.svg\";","import { Link } from 'react-router-dom';\r\nimport { useState, useEffect } from 'react';\r\nimport logo from '../../assets/logo.svg';\r\nimport './navbar.css';\r\n\r\nconst Navbar: React.FC = () => {\r\n  const [isScrolled, setIsScrolled] = useState(false);\r\n\r\n  const changeBG = () => {\r\n    if (window.scrollY > 59) {\r\n      setIsScrolled(true);\r\n    } else {\r\n      setIsScrolled(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('scroll', changeBG);\r\n    return () => {\r\n      window.removeEventListener('scroll', changeBG);\r\n    };\r\n  }, []);\r\n  return (\r\n    <div className={isScrolled ? 'nav-sticky scrolled' : 'nav-sticky'}>\r\n      <div className=\"navbar\">\r\n        <div className=\"logo\">\r\n          <img\r\n            src={logo}\r\n            alt=\"logo\"\r\n          />\r\n          <h3>CODEPENCIL</h3>\r\n        </div>\r\n\r\n        <ul className=\"links\">\r\n          <li>\r\n            <Link to=\"/\">Home</Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/threads\">Threads</Link>\r\n          </li>\r\n          <li>\r\n            <a\r\n              href=\"https://github.com/doutdes0\"\r\n              target=\"_blank\"\r\n              rel=\"noreferrer\"\r\n            >\r\n              Contacts\r\n            </a>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","export default __webpack_public_path__ + \"static/media/github-logo.0d286971.svg\";","import github_logo from '../../assets/github-logo.svg';\r\nimport './footer.css';\r\n\r\nconst Footer: React.FC = () => {\r\n  return (\r\n    <div className=\"footer\">\r\n      <div className=\"footer-content\">\r\n        <p>©2023 Codepencil</p>\r\n        <p>Artem Gromakov</p>\r\n        <a\r\n          href=\"https://github.com/doutdes0\"\r\n          target=\"_blank\"\r\n          rel=\"noreferrer\"\r\n        >\r\n          <img\r\n            src={github_logo}\r\n            alt=\"github-logo\"\r\n          />\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import Navbar from './components/NavBar';\r\nimport { Outlet, ScrollRestoration } from 'react-router-dom';\r\nimport Footer from './components/Footer';\r\nimport '@fortawesome/fontawesome-free/css/all.min.css';\r\nimport './styles/styles.css';\r\n\r\nconst App: React.FC = () => {\r\n  return (\r\n    <div className=\"root-layout\">\r\n      <Navbar />\r\n      <Outlet />\r\n      <Footer />\r\n      <ScrollRestoration />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","export default __webpack_public_path__ + \"static/media/showcase1.4a42686b.png\";","export default __webpack_public_path__ + \"static/media/showcase2.e555c050.png\";","import showcase1 from '../assets/showcase1.png';\r\nimport showcase2 from '../assets/showcase2.png';\r\nimport { Link } from 'react-router-dom';\r\nimport './home.css';\r\n\r\nconst Home: React.FC = () => {\r\n  return (\r\n    <>\r\n      <div className=\"hero-wrapper\">\r\n        <h2>Welcome to Codepencil.</h2>\r\n        <div className=\"hero bttm-right-grad\">\r\n          <div className=\"hero-story\">\r\n            <h3>Create, build fast and behold the beauty of your work!</h3>\r\n            <p>\r\n              Simply import any package from npm, given it's optimized for in-browser bundling, and\r\n              you're ready to go. <br /> We've already preinstalled <strong>React</strong> and{' '}\r\n              <strong>ReactDOM</strong> for you! <br />\r\n              You don't have to set it up, just use the <code>show{'(<App/>)'}</code> function to\r\n              display components and other data types. <br />\r\n              And, most conviniently, variables from previous codecells can be accessed in following\r\n              ones.\r\n            </p>\r\n          </div>\r\n          <div className=\"hero-card hero-card-1\">\r\n            <div className=\"hero-showcase\">\r\n              <img\r\n                src={showcase1}\r\n                alt=\"editor-showcase\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"hero-wrapper\">\r\n        <div className=\"hero bttm-left-grad\">\r\n          <div className=\"hero-card hero-card-2\">\r\n            <div className=\"hero-showcase\">\r\n              <img\r\n                src={showcase2}\r\n                alt=\"editor-showcase\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"hero-story\">\r\n            <h3>Supply your code with useful notes!</h3>\r\n            <p>\r\n              Writing notes is as easy as creating a README file with the help of inbuilt markdown\r\n              editor. <br />\r\n              This way you won't ever lose your train of thought.\r\n            </p>\r\n            <Link to=\"/threads\">\r\n              <button className=\"action-btn\">Dive in!</button>\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import { useMemo } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport { actionCreators } from '../state';\r\n\r\nexport const useActions = () => {\r\n  const dispatch = useDispatch();\r\n  //Bind creators only ONCE\r\n  return useMemo(() => {\r\n    return bindActionCreators(actionCreators, dispatch);\r\n  }, [dispatch]);\r\n};\r\n","import { useActions } from '../../hooks/use-actions';\r\nimport { Fragment } from 'react';\r\nimport './action-bar.css';\r\n\r\ninterface ActionBarProps {\r\n  cellID: string;\r\n  type: string;\r\n  threadID: string;\r\n}\r\n\r\nconst ActionBar: React.FC<ActionBarProps> = ({ cellID, type, threadID }) => {\r\n  const { moveCell, deleteCell } = useActions();\r\n  return (\r\n    <Fragment>\r\n      <div className=\"action-bar-wrapper\">\r\n        <div className=\"mark\">\r\n          <span className=\"icon\">\r\n            {type === 'code' && <i className=\"fas fa-code\"></i>}\r\n            {type === 'text' && <i className=\"fas fa-pencil-alt\"></i>}\r\n          </span>\r\n        </div>\r\n        <button\r\n          title=\"Move cell up\"\r\n          onClick={() => moveCell(threadID, cellID, 'up')}\r\n        >\r\n          <span className=\"icon\">\r\n            <i className=\"fas fa-angle-double-up\"></i>\r\n          </span>\r\n        </button>\r\n        <button\r\n          title=\"Move cell down\"\r\n          onClick={() => moveCell(threadID, cellID, 'down')}\r\n        >\r\n          <span className=\"icon\">\r\n            <i className=\"fas fa-angle-double-down\"></i>\r\n          </span>\r\n        </button>\r\n        <button\r\n          title=\"Delete cell\"\r\n          onClick={() => deleteCell(threadID, cellID)}\r\n        >\r\n          <span className=\"icon\">\r\n            <i className=\"fas fa-times\"></i>\r\n          </span>\r\n        </button>\r\n      </div>\r\n      <div className=\"action-bar-divider\"></div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ActionBar;\r\n","import MonacoEditor, { EditorDidMount } from '@monaco-editor/react';\r\nimport prettier from 'prettier';\r\nimport parser from 'prettier/parser-babel';\r\nimport codeShift from 'jscodeshift';\r\nimport Highlighter from 'monaco-jsx-highlighter';\r\nimport { useRef } from 'react';\r\nimport { editor } from 'monaco-editor';\r\nimport './code-editor.css';\r\n\r\ninterface CodeEditorProps {\r\n  initialValue: string;\r\n  onChange(value: string): void;\r\n}\r\n\r\nconst CodeEditor: React.FC<CodeEditorProps> = ({ initialValue, onChange }) => {\r\n  //Reference the instance of editor to use in other methods\r\n  const editorRef = useRef<editor.IStandaloneCodeEditor>();\r\n\r\n  const onEditorDidMount: EditorDidMount = (getValue, monacoEditor) => {\r\n    editorRef.current = monacoEditor;\r\n    //Add in-built event listener for changes in editor, pass the value to onChange\r\n    monacoEditor.onDidChangeModelContent(() => {\r\n      onChange(getValue());\r\n    });\r\n    const highlighter = new Highlighter(\r\n      //@ts-ignore\r\n      window.monaco,\r\n      codeShift,\r\n      monacoEditor\r\n    );\r\n    highlighter.highLightOnDidChangeModelContent(\r\n      //Removing unnecessary error logs\r\n      () => {},\r\n      () => {},\r\n      undefined,\r\n      () => {}\r\n    );\r\n  };\r\n\r\n  const onFormat = () => {\r\n    //Get current value from editor\r\n    const unformated = editorRef.current!.getModel()!.getValue();\r\n    //Format\r\n    const formated = prettier.format(unformated, {\r\n      parser: 'babel',\r\n      plugins: [parser],\r\n      useTabs: false,\r\n      semi: true,\r\n      singleQuote: true,\r\n    });\r\n    //Push formated value back to editor\r\n    editorRef.current!.setValue(formated);\r\n  };\r\n  return (\r\n    <div className=\"code-wrapper\">\r\n      <button\r\n        className=\"format-btn\"\r\n        onClick={onFormat}\r\n      >\r\n        Format\r\n      </button>\r\n      <MonacoEditor\r\n        editorDidMount={onEditorDidMount}\r\n        value={initialValue}\r\n        className=\"code-editor\"\r\n        language=\"javascript\"\r\n        theme=\"dark\"\r\n        options={{\r\n          wordWrap: 'on',\r\n          minimap: { enabled: false },\r\n          showUnused: false,\r\n          folding: false,\r\n          lineNumbersMinChars: 3,\r\n          fontSize: 16,\r\n          scrollBeyondLastLine: false,\r\n          automaticLayout: true,\r\n          colorDecorators: true,\r\n          scrollbar: { alwaysConsumeMouseWheel: false },\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CodeEditor;\r\n","import React, { useRef, useEffect } from 'react';\r\nimport './iframe.css';\r\n\r\ninterface IframeProps {\r\n  code: string;\r\n  bundlerErr: string;\r\n}\r\n\r\nconst html = ` <html>\r\n<head></head>\r\n<body>\r\n  <div id=\"root\"></div>\r\n  <script>\r\n  const root = document.getElementById('root');\r\n  const handleError = (err) => {\r\n    root.innerHTML = '<div style=\"color:red;font-family: Consolas, Courier New, monospace;background-color:white;\">' + err + '</div>';\r\n    console.error(err);\r\n  };\r\n    window.addEventListener('error', (e) => {\r\n      e.preventDefault();\r\n      handleError(e.error)\r\n    });\r\n    window.addEventListener('message', (e) => {\r\n      try {\r\n        root.innerHTML = '';\r\n        eval(e.data);\r\n      } catch (err) {\r\n        handleError(err);\r\n      }\r\n    }, false);\r\n  </script>\r\n</body>\r\n</html>`;\r\n\r\nconst Iframe: React.FC<IframeProps> = ({ code, bundlerErr }) => {\r\n  const iframe = useRef<any>();\r\n\r\n  useEffect(() => {\r\n    //Reset iframe before each bundling/whenever code changes\r\n    iframe.current.srcDoc = html;\r\n    //Post a message from parent window to iframe, containing bundled code\r\n    setTimeout(() => {\r\n      iframe.current.contentWindow.postMessage(code, '*');\r\n    }, 50);\r\n  }, [code]);\r\n\r\n  return (\r\n    <div className=\"iframe-wrapper\">\r\n      <iframe\r\n        title=\"preview\"\r\n        ref={iframe}\r\n        srcDoc={html}\r\n        sandbox=\"allow-scripts\"\r\n      ></iframe>\r\n      {bundlerErr && <div className=\"bundler-error\">{bundlerErr}</div>}\r\n    </div>\r\n  );\r\n};\r\nexport default Iframe;\r\n","import { ResizableBox, ResizableBoxProps } from 'react-resizable';\r\nimport { useEffect, useState } from 'react';\r\nimport './resizable.css';\r\n\r\ninterface ResizableProps {\r\n  direction: 'vertical' | 'horizontal';\r\n  children: React.ReactNode;\r\n}\r\n\r\nconst Resizable: React.FC<ResizableProps> = ({ direction, children }) => {\r\n  const [innerWidth, setInnerWidth] = useState(window.innerWidth);\r\n  const [width, setWidth] = useState(window.innerWidth * 0.45);\r\n\r\n  useEffect(() => {\r\n    let timer: any;\r\n    const listener = () => {\r\n      if (timer) {\r\n        clearTimeout(timer);\r\n      }\r\n      timer = setTimeout(() => {\r\n        setInnerWidth(window.innerWidth);\r\n        if (width > window.innerWidth * 0.45) {\r\n          setWidth(window.innerWidth * 0.45);\r\n        }\r\n      }, 100);\r\n    };\r\n    window.addEventListener('resize', listener);\r\n    return () => {\r\n      window.removeEventListener('resize', listener);\r\n    };\r\n  }, [width]);\r\n\r\n  let resizableProps: ResizableBoxProps;\r\n  if (direction === 'vertical') {\r\n    resizableProps = {\r\n      className: 'resizable-container-v',\r\n      height: 400,\r\n      width: Infinity,\r\n      resizeHandles: ['s'],\r\n      minConstraints: [Infinity, 24],\r\n      maxConstraints: [Infinity, Infinity],\r\n    };\r\n  } else {\r\n    resizableProps = {\r\n      className: 'resizable-container-h',\r\n      height: Infinity,\r\n      width,\r\n      resizeHandles: ['e'],\r\n      minConstraints: [innerWidth * 0.2, Infinity],\r\n      maxConstraints: [innerWidth * 0.75, Infinity],\r\n      onResizeStop: (e, data) => {\r\n        setWidth(data.size.width);\r\n      },\r\n    };\r\n  }\r\n  return <ResizableBox {...resizableProps}>{children}</ResizableBox>;\r\n};\r\n\r\nexport default Resizable;\r\n","import { useSelector, TypedUseSelectorHook } from 'react-redux';\r\nimport { RootState } from '../state';\r\n\r\n//Enable proper type checking when accessing the store\r\nexport const useTypedSelector: TypedUseSelectorHook<RootState> = useSelector;\r\n","import CodeEditor from '../CodeEditor';\r\nimport Iframe from '../Iframe';\r\nimport Resizable from '../Resizable';\r\nimport { useEffect } from 'react';\r\nimport { useActions } from '../../hooks/use-actions';\r\nimport { useTypedSelector } from '../../hooks/use-typed-selector';\r\nimport { useCumulativeCode } from '../../hooks/use-cumulative-code';\r\nimport { Cell } from '../../state';\r\nimport './codecell.css';\r\n\r\ninterface CodeCellProps {\r\n  threadID: string;\r\n  cell: Cell;\r\n}\r\n\r\nconst CodeCell: React.FC<CodeCellProps> = ({ threadID, cell }) => {\r\n  const { updateCell, createBundle } = useActions();\r\n  const cumulativeCode = useCumulativeCode(threadID, cell.id);\r\n  useEffect(() => {\r\n    if (!bundle) {\r\n      createBundle(cell.id, cell.content);\r\n      return;\r\n    }\r\n    const timer = setTimeout(async () => {\r\n      createBundle(cell.id, cumulativeCode!);\r\n    }, 1000);\r\n\r\n    return () => {\r\n      clearTimeout(timer);\r\n    };\r\n    //eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [cell.id, cumulativeCode, createBundle]);\r\n\r\n  const bundle = useTypedSelector((state) => state.bundles[cell.id]);\r\n  return (\r\n    <>\r\n      <Resizable direction=\"vertical\">\r\n        <div className=\"codecell\">\r\n          <Resizable direction=\"horizontal\">\r\n            <CodeEditor\r\n              onChange={(value) => updateCell(threadID, cell.id, value)}\r\n              initialValue={cell.content}\r\n            />\r\n          </Resizable>\r\n          {(!bundle || bundle.loading) && (\r\n            <div className=\"spinner-wrapper\">\r\n              <div className=\"loading-spinner\"></div>\r\n            </div>\r\n          )}\r\n          {bundle && (\r\n            <Iframe\r\n              code={bundle.code}\r\n              bundlerErr={bundle.err}\r\n            />\r\n          )}\r\n        </div>\r\n      </Resizable>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CodeCell;\r\n","import { useTypedSelector } from './use-typed-selector';\r\n\r\nexport const useCumulativeCode = (threadID: string, cellID: string) => {\r\n  return useTypedSelector((state) => {\r\n    const cells = state.cells.data[threadID];\r\n    const order = state.cells.order[threadID];\r\n\r\n    const orderedList = order.map((id) => cells[id]);\r\n    const cumulativeCode = [\r\n      `\r\n        import _React from 'react';\r\n        import _ReactDOM from 'react-dom';\r\n        const _root = _ReactDOM.createRoot(root);\r\n        const show = (val) => {\r\n          if(typeof val === 'object') {\r\n            if(val.$$typeof && val.props) {\r\n              _root.render(val);\r\n            } else {\r\n            root.innerHTML = JSON.stringify(val);\r\n            }\r\n          } else {\r\n            root.innerHTML = val;\r\n          }\r\n        }\r\n        `,\r\n    ];\r\n\r\n    for (let c of orderedList) {\r\n      if (c.type === 'code') {\r\n        if (c.id === cellID) {\r\n          cumulativeCode.push(c.content);\r\n          break;\r\n        } else {\r\n          const regex = /show(.*)/g;\r\n          cumulativeCode.push(c.content.replace(regex, ''));\r\n        }\r\n      }\r\n    }\r\n    return cumulativeCode.join('\\n');\r\n  });\r\n};\r\n","import MDEditor from '@uiw/react-md-editor';\r\nimport { useState, useEffect, useRef } from 'react';\r\nimport { useActions } from '../../hooks/use-actions';\r\nimport { Cell } from '../../state';\r\nimport './text-editor.css';\r\n\r\ninterface TextEditorProps {\r\n  threadID: string;\r\n  cell: Cell;\r\n}\r\n\r\nconst TextEditor: React.FC<TextEditorProps> = ({ threadID, cell }) => {\r\n  const { updateCell } = useActions();\r\n  const [editing, setEditing] = useState(false);\r\n  const editorRef = useRef<HTMLDivElement | null>(null);\r\n\r\n  useEffect(() => {\r\n    const listener = (e: MouseEvent) => {\r\n      if (editorRef.current && e.target && !editorRef.current.contains(e.target as Node)) {\r\n        setEditing(false);\r\n      }\r\n    };\r\n    document.addEventListener('click', listener, { capture: true });\r\n\r\n    return () => {\r\n      document.removeEventListener('click', listener, { capture: true });\r\n    };\r\n  }, []);\r\n\r\n  if (editing) {\r\n    return (\r\n      <div ref={editorRef}>\r\n        <div className=\"editor-wrapper\">\r\n          <MDEditor\r\n            value={cell.content}\r\n            height={window.innerHeight * 0.6}\r\n            onChange={(value) => updateCell(threadID, cell.id, value || '')}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div onClick={() => setEditing(true)}>\r\n      <div className=\"md-wrapper\">\r\n        <MDEditor.Markdown source={cell.content || 'Click me to edit'} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TextEditor;\r\n","import { Cell } from '../../state';\r\nimport ActionBar from '../ActionBar';\r\nimport CodeCell from '../CodeCell';\r\nimport TextEditor from '../TextEditor';\r\n\r\ninterface CellListItemProps {\r\n  threadID: string;\r\n  cell: Cell;\r\n}\r\n\r\nconst CellListItem: React.FC<CellListItemProps> = ({ threadID, cell }) => {\r\n  return (\r\n    <>\r\n      <ActionBar\r\n        cellID={cell.id}\r\n        type={cell.type}\r\n        threadID={threadID}\r\n      />\r\n      {cell.type === 'code' && (\r\n        <CodeCell\r\n          cell={cell}\r\n          threadID={threadID}\r\n        />\r\n      )}\r\n      {cell.type === 'text' && (\r\n        <TextEditor\r\n          cell={cell}\r\n          threadID={threadID}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CellListItem;\r\n","import { useActions } from '../../hooks/use-actions';\r\nimport './add-cell.css';\r\n\r\ninterface AddCellProps {\r\n  threadID: string;\r\n  nextCellID: string | null;\r\n  forceVisible?: boolean;\r\n}\r\n\r\nconst AddCell: React.FC<AddCellProps> = ({ threadID, nextCellID, forceVisible }) => {\r\n  const { insertCell } = useActions();\r\n  return (\r\n    <div className={`add-cell-wrapper ${forceVisible ? 'force-visible' : ''}`}>\r\n      <div className=\"divider\"></div>\r\n\r\n      <button\r\n        title=\"Add codecell\"\r\n        onClick={() => insertCell(threadID, nextCellID, 'code')}\r\n      >\r\n        <span className=\"icon\">\r\n          <i className=\"fas fa-code\"></i>\r\n        </span>\r\n      </button>\r\n\r\n      <button\r\n        title=\"Add textcell\"\r\n        onClick={() => insertCell(threadID, nextCellID, 'text')}\r\n      >\r\n        <span className=\"icon\">\r\n          <i className=\"fas fa-pencil-alt\"></i>\r\n        </span>\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddCell;\r\n","import { useTypedSelector } from '../../hooks/use-typed-selector';\r\nimport './cell-list-card.css';\r\n\r\ninterface CellListCardProps {\r\n  threadID: string;\r\n}\r\n\r\nconst CellListCard: React.FC<CellListCardProps> = ({ threadID }) => {\r\n  const { name, description } = useTypedSelector((state) => {\r\n    return state.threads.data[threadID];\r\n  });\r\n  return (\r\n    <div className=\"title-wrapper\">\r\n      <h2>{name}</h2>\r\n      <p>{description}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CellListCard;\r\n","import CellListItem from '../CellListItem/index';\r\nimport AddCell from '../AddCell/index';\r\nimport CellListCard from '../CellListCard';\r\nimport { useTypedSelector } from '../../hooks/use-typed-selector';\r\nimport { Fragment } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport './cell-list.css';\r\n\r\ninterface NavigateProps {\r\n  threadID: string;\r\n}\r\n\r\nconst CellList: React.FC = () => {\r\n  const location = useLocation();\r\n  const { threadID } = location.state as NavigateProps;\r\n  const cells = useTypedSelector((state) => {\r\n    return state.cells.order[threadID].map((id) => state.cells.data[threadID][id]);\r\n  });\r\n\r\n  return (\r\n    <div className=\"cell-list-wrapper\">\r\n      <CellListCard threadID={threadID} />\r\n      {cells.length === 0 && (\r\n        <AddCell\r\n          forceVisible={cells.length === 0}\r\n          nextCellID={null}\r\n          threadID={threadID}\r\n        />\r\n      )}\r\n\r\n      {cells.map((cell) => (\r\n        <Fragment key={cell.id}>\r\n          <CellListItem\r\n            key={cell.id}\r\n            cell={cell}\r\n            threadID={threadID}\r\n          />\r\n\r\n          <AddCell\r\n            nextCellID={cell.id}\r\n            threadID={threadID}\r\n          />\r\n        </Fragment>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CellList;\r\n","import { Thread } from '../../state/reducers/threadsReducer';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useActions } from '../../hooks/use-actions';\r\nimport { SyntheticEvent } from 'react';\r\nimport './thread-item.css';\r\n\r\ninterface ThreadListItemProps {\r\n  thread: Thread;\r\n}\r\n\r\nconst ThreadListItem: React.FC<ThreadListItemProps> = ({ thread: { name, description, id } }) => {\r\n  const navigate = useNavigate();\r\n  const { deleteThread } = useActions();\r\n  const onClickEdit = (e: SyntheticEvent) => {\r\n    e.stopPropagation();\r\n    navigate('/add-updThread', { state: { threadID: id, name, description } });\r\n  };\r\n  return (\r\n    <div\r\n      onClick={() => navigate('/cellList', { state: { threadID: id } })}\r\n      className=\"thread-item-wrapper\"\r\n    >\r\n      <h3>{name}</h3>\r\n      {description && <p>{description}</p>}\r\n      <div className=\"action-buttons\">\r\n        <button\r\n          onClick={(e) => onClickEdit(e)}\r\n          title=\"Edit thread\"\r\n        >\r\n          <span className=\"icon\">\r\n            <i className=\"fas fa-sm fa-pencil-alt\"></i>\r\n          </span>\r\n        </button>\r\n        <button\r\n          title=\"Delete thread\"\r\n          onClick={(e) => {\r\n            e.stopPropagation();\r\n            deleteThread(id);\r\n          }}\r\n        >\r\n          <span className=\"icon\">\r\n            <i className=\"fas fa-times\"></i>\r\n          </span>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ThreadListItem;\r\n","import { useNavigate } from 'react-router-dom';\r\nimport './add-thread-card.css';\r\n\r\nconst AddThreadCard: React.FC = () => {\r\n  const navigate = useNavigate();\r\n  return (\r\n    <div\r\n      onClick={() => navigate('/add-updThread')}\r\n      className=\"add-thread-item-wrapper\"\r\n    >\r\n      <div className=\"icon-wrapper\">\r\n        <span className=\"icon\">\r\n          <i className=\"fas fa-plus fa-3x fa-fade\"></i>\r\n        </span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddThreadCard;\r\n","import ThreadListItem from '../ThreadListItem';\r\nimport AddThreadCard from '../AddThreadCard';\r\nimport { useTypedSelector } from '../../hooks/use-typed-selector';\r\nimport { Fragment } from 'react';\r\nimport './thread-list.css';\r\n\r\nconst ThreadList: React.FC = () => {\r\n  const threads = useTypedSelector(({ threads: { data } }) => {\r\n    return Object.values(data);\r\n  });\r\n  return (\r\n    <div className=\"thread-list-wrapper\">\r\n      <AddThreadCard />\r\n      {threads.map((thread) => (\r\n        <Fragment key={thread.id}>\r\n          <ThreadListItem\r\n            key={thread.id}\r\n            thread={thread}\r\n          />\r\n        </Fragment>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ThreadList;\r\n","import { SyntheticEvent, useState } from 'react';\r\nimport { useActions } from '../../hooks/use-actions';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport './add-upd-thread.css';\r\n\r\ninterface NavigateProps {\r\n  threadID: string | null;\r\n  name: string | null;\r\n  description: string | null;\r\n}\r\n\r\nconst AddUpdThread: React.FC = () => {\r\n  const { createThread, updateThread } = useActions();\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const {\r\n    threadID,\r\n    name: currentName,\r\n    description: currentDescription,\r\n  } = location.state\r\n    ? (location.state as NavigateProps)\r\n    : { threadID: null, name: null, description: null };\r\n\r\n  const [name, setName] = useState(currentName ? currentName : '');\r\n  const [description, setDescription] = useState(currentDescription ? currentDescription : '');\r\n\r\n  const onSubmit = (e: SyntheticEvent) => {\r\n    e.preventDefault();\r\n    if (location.state) {\r\n      updateThread(threadID!, name, description);\r\n    } else {\r\n      createThread(name, description);\r\n    }\r\n\r\n    navigate('/threads');\r\n  };\r\n\r\n  return (\r\n    <div className=\"add-thread-wrapper\">\r\n      <form onSubmit={(e) => onSubmit(e)}>\r\n        <label htmlFor=\"name\">Name</label>\r\n        <input\r\n          onChange={(e) => setName(e.target.value)}\r\n          id=\"name\"\r\n          type=\"text\"\r\n          value={name}\r\n          autoComplete=\"off\"\r\n          maxLength={60}\r\n        />\r\n        <label htmlFor=\"description\">Description</label>\r\n        <textarea\r\n          onChange={(e) => setDescription(e.target.value)}\r\n          id=\"description\"\r\n          value={description}\r\n          cols={40}\r\n          rows={10}\r\n          maxLength={600}\r\n        ></textarea>\r\n        <div className=\"button-wrapper\">\r\n          <button type=\"submit\">{location.state ? 'Update' : 'Create'}</button>\r\n          <button\r\n            name=\"discard\"\r\n            onClick={() => navigate('/threads')}\r\n          >\r\n            {location.state ? 'Discard changes' : 'Discard'}\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddUpdThread;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport { createBrowserRouter, RouterProvider } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { store } from './state';\r\nimport App from './App';\r\nimport Home from './pages/home';\r\nimport CellList from './components/CellList';\r\nimport ThreadList from './components/ThreadList';\r\nimport AddUpdThread from './components/AddUpdThread';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root') as HTMLElement);\r\nconst router = createBrowserRouter(\r\n  [\r\n    {\r\n      path: '/',\r\n      element: <App />,\r\n      children: [\r\n        {\r\n          path: '/',\r\n          element: <Home />,\r\n        },\r\n        {\r\n          path: '/threads',\r\n          element: <ThreadList />,\r\n        },\r\n        {\r\n          path: '/cellList',\r\n          element: <CellList />,\r\n        },\r\n        {\r\n          path: '/add-updThread',\r\n          element: <AddUpdThread />,\r\n        },\r\n      ],\r\n    },\r\n  ],\r\n  { basename: '/Codepencil' }\r\n);\r\n\r\nroot.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <RouterProvider router={router} />\r\n    </Provider>\r\n  </React.StrictMode>\r\n);\r\n"],"sourceRoot":""}